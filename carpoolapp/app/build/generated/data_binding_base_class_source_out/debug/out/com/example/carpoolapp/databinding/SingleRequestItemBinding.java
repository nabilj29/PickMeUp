// Generated by view binder compiler. Do not edit!
package com.example.carpoolapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carpoolapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SingleRequestItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView estimatedpricechangeHeading;

  @NonNull
  public final TextView estimatedpricechangeStatement;

  @NonNull
  public final TextView estimatedtimechangeHeading;

  @NonNull
  public final TextView estimatedtimechangeStatement;

  @NonNull
  public final RadioButton radioButton;

  @NonNull
  public final TextView ratinguserRating;

  @NonNull
  public final TextView requesterratingfield;

  @NonNull
  public final TextView requestingusernamefield;

  @NonNull
  public final TextView requestingusernameheading;

  @NonNull
  public final TextView requeststartinglocationfield;

  @NonNull
  public final TextView startinglocationheading;

  private SingleRequestItemBinding(@NonNull CardView rootView,
      @NonNull TextView estimatedpricechangeHeading,
      @NonNull TextView estimatedpricechangeStatement, @NonNull TextView estimatedtimechangeHeading,
      @NonNull TextView estimatedtimechangeStatement, @NonNull RadioButton radioButton,
      @NonNull TextView ratinguserRating, @NonNull TextView requesterratingfield,
      @NonNull TextView requestingusernamefield, @NonNull TextView requestingusernameheading,
      @NonNull TextView requeststartinglocationfield, @NonNull TextView startinglocationheading) {
    this.rootView = rootView;
    this.estimatedpricechangeHeading = estimatedpricechangeHeading;
    this.estimatedpricechangeStatement = estimatedpricechangeStatement;
    this.estimatedtimechangeHeading = estimatedtimechangeHeading;
    this.estimatedtimechangeStatement = estimatedtimechangeStatement;
    this.radioButton = radioButton;
    this.ratinguserRating = ratinguserRating;
    this.requesterratingfield = requesterratingfield;
    this.requestingusernamefield = requestingusernamefield;
    this.requestingusernameheading = requestingusernameheading;
    this.requeststartinglocationfield = requeststartinglocationfield;
    this.startinglocationheading = startinglocationheading;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static SingleRequestItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SingleRequestItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.single_request_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SingleRequestItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.estimatedpricechangeHeading;
      TextView estimatedpricechangeHeading = ViewBindings.findChildViewById(rootView, id);
      if (estimatedpricechangeHeading == null) {
        break missingId;
      }

      id = R.id.estimatedpricechangeStatement;
      TextView estimatedpricechangeStatement = ViewBindings.findChildViewById(rootView, id);
      if (estimatedpricechangeStatement == null) {
        break missingId;
      }

      id = R.id.estimatedtimechangeHeading;
      TextView estimatedtimechangeHeading = ViewBindings.findChildViewById(rootView, id);
      if (estimatedtimechangeHeading == null) {
        break missingId;
      }

      id = R.id.estimatedtimechangeStatement;
      TextView estimatedtimechangeStatement = ViewBindings.findChildViewById(rootView, id);
      if (estimatedtimechangeStatement == null) {
        break missingId;
      }

      id = R.id.radioButton;
      RadioButton radioButton = ViewBindings.findChildViewById(rootView, id);
      if (radioButton == null) {
        break missingId;
      }

      id = R.id.ratinguser_rating;
      TextView ratinguserRating = ViewBindings.findChildViewById(rootView, id);
      if (ratinguserRating == null) {
        break missingId;
      }

      id = R.id.requesterratingfield;
      TextView requesterratingfield = ViewBindings.findChildViewById(rootView, id);
      if (requesterratingfield == null) {
        break missingId;
      }

      id = R.id.requestingusernamefield;
      TextView requestingusernamefield = ViewBindings.findChildViewById(rootView, id);
      if (requestingusernamefield == null) {
        break missingId;
      }

      id = R.id.requestingusernameheading;
      TextView requestingusernameheading = ViewBindings.findChildViewById(rootView, id);
      if (requestingusernameheading == null) {
        break missingId;
      }

      id = R.id.requeststartinglocationfield;
      TextView requeststartinglocationfield = ViewBindings.findChildViewById(rootView, id);
      if (requeststartinglocationfield == null) {
        break missingId;
      }

      id = R.id.startinglocationheading;
      TextView startinglocationheading = ViewBindings.findChildViewById(rootView, id);
      if (startinglocationheading == null) {
        break missingId;
      }

      return new SingleRequestItemBinding((CardView) rootView, estimatedpricechangeHeading,
          estimatedpricechangeStatement, estimatedtimechangeHeading, estimatedtimechangeStatement,
          radioButton, ratinguserRating, requesterratingfield, requestingusernamefield,
          requestingusernameheading, requeststartinglocationfield, startinglocationheading);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
